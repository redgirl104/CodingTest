"""
1 만들기
- 정수 x에 사용할 수 있는 연산 4가지
1) x가 5로 나누어 떨어지면, 5로 나눔
2) x가 3로 나누어 떨어지면, 3로 나눔
3) x가 2로 나누어 떨어지면, 2로 나눔
4) x에서 1을 뺌


난이도 : 중하 | 풀이시간 : 20분 | 시간제한 : 1초 | 메모리제한 : 128MB
문제 : 연산을 사용하는 횟수의 최솟값

입력조건 :정수  X   
          (1<= N <= 30,000)
          
출력조건 : 연산을 하는 횟수의 최솟값

예시 : 26 
      26 > 25 > 5 > 1 
출력 : 3

풀이 :
  5나 6으로 나누어 떨어지는지 확인
  뺄셈 보다 나눗셈으로 숫자를 줄이는 것이 연산 횟수를 줄이는 방법
  - 2일 때 : 2로 나누거나, 1을 뺌. (1번 연산)
  - 3일 때 : 3으로 나누기. (1번). 1을 뺌 (2번)
  26 13 12 4 2 1
  - 각 숫자에서의 최적해를 찾아서 해법길을 찾는다.

  - 1을 뺀 숫자에서의 최적해와
  - 현재 숫자에서의 나눗셈을 통한 최적해를 비교
  - 더 작은 수를 출력

답 점화식
  a_i = min(a_i-1, a_i/2, a_i/3, a_i/5) + 1
"""

x = int(input())

d = [0] * 30001


for i in range(2, x+1):
  d[i] = d[i - 1] + 1
  if i % 2 == 0:
    d[i] = min(d[i], d[i // 2] + 1)
  if i % 3 == 0:
    d[i] = min(d[i], d[i // 3] + 1)
  if i % 5 == 0 :
    d[i] = min(d[i], d[i // 5] + 1)

print(d[x])    